var events = require('events'),
	util = require('util')
	db = require('db_driver');

//this will likely come from somewhere else...
var commands = {
	'state':null,
	'set':null,
	'get':null,
	'update':null,
	'halt_and_catch_fire':null};

function Dispatcher() {
	if (false === (this instanceof Dispatcher)){
			return new Dispatcher();
	}
	
	events.EventEmitter.call(this);
}

util.inherits(Dispatcher,events.EventEmitter);

Dispatcher.prototype.parseProtocol = function (data){
	var l = +(data.slice(0,4).toString('utf8')),
		m = data.slice(4).toString('utf8'),
		obj = {},
		self = this;
	if (l === m.length){
		obj = JSON.parse(m);
		//self.emit('dispatched',obj);
		
		if (method_dispatcher(obj)){
			self.emit('dispatched',obj);
		}
		else{
			self.emit('error','unknown command');
		}
	}
	else{
		self.emit('error','message garbled');
	}

}


function method_dispatcher(obj){
	if (obj.hasOwnProperty('cmd') && commands.hasOwnProperty(obj.cmd)){
		if (commands[obj.cmd]){
			commands[obj.cmd](obj);
		}
		return true;
	}
	return false;
}

commands.state = function(obj){
	//util.log('state func ' + obj);
	db.WriteTagData(obj);
}
exports.Dispatcher = Dispatcher;

